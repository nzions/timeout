name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    runs-on: macos-latest
    
    strategy:
      matrix:
        go-version: [1.21, 1.22]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}
    
    - name: Build
      run: go build -v ./...
    
    - name: Test
      run: go test -v ./...
    
    - name: Test with coverage
      run: go test -v -race -coverprofile=coverage.out ./...
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.out
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  build:
    runs-on: macos-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: 1.22
    
    - name: Build for macOS (primary platform)
      run: |
        GOOS=darwin GOARCH=amd64 go build -ldflags="-s -w" -o timeout-darwin-amd64
        GOOS=darwin GOARCH=arm64 go build -ldflags="-s -w" -o timeout-darwin-arm64
    
    - name: Build experimental versions (untested)
      run: |
        GOOS=linux GOARCH=amd64 go build -ldflags="-s -w" -o timeout-linux-amd64
        GOOS=windows GOARCH=amd64 go build -ldflags="-s -w" -o timeout-windows-amd64.exe
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: binaries
        path: timeout-*
